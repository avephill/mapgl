% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/style_helpers.R
\name{get_legend_labels}
\alias{get_legend_labels}
\title{Extract legend labels from a classification or continuous scale object}
\usage{
get_legend_labels(
  scale,
  format = "none",
  currency_symbol = "$",
  digits = 2,
  big_mark = ",",
  suffix = "",
  prefix = ""
)
}
\arguments{
\item{scale}{A mapgl_classification or mapgl_continuous_scale object.}

\item{format}{A character string specifying the format type. Options include:
\itemize{
\item "none" (default): No special formatting
\item "currency": Format as currency (e.g., "$1,234")
\item "percent": Format as percentage (e.g., "12.3\%")
\item "scientific": Format in scientific notation (e.g., "1.2e+03")
\item "compact": Format with abbreviated units (e.g., "1.2K", "3.4M")
}}

\item{currency_symbol}{The currency symbol to use when format = "currency". Defaults to "$".}

\item{digits}{The number of decimal places to display. Defaults to 2.}

\item{big_mark}{The character to use as thousands separator. Defaults to ",".}

\item{suffix}{An optional suffix to add to all values (e.g., "km", "mph").}

\item{prefix}{An optional prefix to add to all values (useful for custom formatting).}
}
\value{
A character vector of formatted legend labels.
}
\description{
This function extracts legend labels from a mapgl_classification object
created by step_equal_interval(), step_quantile(), or step_jenks(), or from
a mapgl_continuous_scale object created by interpolate_palette(). It supports
optional number formatting to customize how the values are displayed.
}
\examples{
\dontrun{
data_values <- c(10000, 25000, 30000, 45000, 60000, 75000, 90000)

# Classification examples
classification <- step_equal_interval("value", data_values, n = 4)
labels <- get_legend_labels(classification, format = "currency")

# Continuous scale examples  
scale <- interpolate_palette("value", data_values, method = "quantile", n = 5)
labels <- get_legend_labels(scale, format = "compact")

# Custom formatting with suffix
labels <- get_legend_labels(scale, suffix = " km")
}
}
